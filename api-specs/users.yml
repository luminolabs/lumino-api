openapi: 3.0.0
info:
  title: Users API
  version: 1.0.0
  description: API for user management and authentication

paths:
  /v1/users/me:
    get:
      summary: Get current user information
      tags:
        - Users
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: User information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          $ref: 'common-structures.yml#/components/responses/Unauthorized'

    patch:
      summary: Update current user information
      tags:
        - Users
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          description: User information updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          $ref: 'common-structures.yml#/components/responses/BadRequest'
        '401':
          $ref: 'common-structures.yml#/components/responses/Unauthorized'

  /v1/users/{user_id}:
    delete:
      summary: Delete user account (Internal API)
      description: This is an internal API for administrative or automated account removal.
      tags:
        - Users
        - Internal
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: User account deleted successfully
        '400':
          $ref: 'common-structures.yml#/components/responses/BadRequest'
        '401':
          $ref: 'common-structures.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'common-structures.yml#/components/responses/Forbidden'
        '404':
          $ref: 'common-structures.yml#/components/responses/NotFound'

components:
  schemas:
    UserUpdate:
      type: object
      properties:
        name:
          type: string
          description: The updated name of the user

    UserResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        status:
          type: string
          enum: [ACTIVE, INACTIVE]
        name:
          type: string
        email:
          type: string
          format: email
        credits_balance:
          type: integer
          description: The user's current credit balance

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key