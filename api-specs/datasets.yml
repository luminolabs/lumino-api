openapi: 3.0.0
info:
  title: Datasets API
  version: 1.0.0
  description: API for managing dataset files

paths:
  /v1/datasets:
    post:
      summary: Upload a new dataset file
      tags:
        - Datasets
      security:
        - BearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: JSONL file in OpenAI format
                id:
                  type: string
                  description: User-assigned name for the dataset
                description:
                  type: string
                  description: User-provided description of the dataset
      responses:
        '201':
          description: Successfully uploaded dataset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

    get:
      summary: List all datasets uploaded by the user
      tags:
        - Datasets
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/ItemsPerPageParam'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Dataset'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /v1/datasets/{dataset_name}:
    get:
      summary: Get information about a specific dataset
      tags:
        - Datasets
      security:
        - BearerAuth: []
      parameters:
        - name: dataset_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

    delete:
      summary: Delete a specific dataset file
      tags:
        - Datasets
      security:
        - BearerAuth: []
      parameters:
        - name: dataset_name
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Successfully deleted dataset
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

components:
  schemas:
    Dataset:
      type: object
      properties:
        id:
          type: string
        created_at:
          type: string
          format: date-time
        status:
          type: string
          enum: [uploaded, validated, error]
        description:
          type: string
        file_size:
          type: integer
        errors:
          type: object
          nullable: true

    Pagination:
      type: object
      properties:
        total_pages:
          type: integer
          description: Total number of pages
        current_page:
          type: integer
          description: Current page number
        items_per_page:
          type: integer
          description: Number of items per page
        next_page:
          type: integer
          nullable: true
          description: Next page number (null if there is no next page)
        previous_page:
          type: integer
          nullable: true
          description: Previous page number (null if there is no previous page)

    Error:
      type: object
      required:
        - code
        - detail
      properties:
        code:
          type: string
          description: A unique error code that identifies the type of error
        detail:
          type: string
          description: A human-readable error message
        details:
          type: object
          description: Additional details about the error, if any

    ErrorResponse:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
        request_name:
          type: string
          description: A unique identifier for the request, useful for debugging and support

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

  parameters:
    PageParam:
      in: query
      name: page
      schema:
        type: integer
        default: 1
        minimum: 1
      description: Page number to retrieve
    ItemsPerPageParam:
      in: query
      name: items_per_page
      schema:
        type: integer
        default: 20
        minimum: 1
        maximum: 100
      description: Number of items to return per page

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer