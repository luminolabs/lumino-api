openapi: 3.0.0
info:
  title: LuminoLabs User Management API
  version: 1.0.0
  description: API for user management, authentication, and job viewing

servers:
  - url: https://api.luminolabs.ai/v1

paths:
  /auth/signup:
    post:
      summary: User Sign Up
      description: Create a new user account
      operationId: signUp
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignUp'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request (e.g., email already exists)

  /auth/signin:
    post:
      summary: User Sign In
      description: Authenticate a user and receive an access token
      operationId: signIn
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignIn'
      responses:
        '200':
          description: Successful authentication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Unauthorized

  /users/me:
    get:
      summary: Get Current User
      description: Retrieve the profile of the currently authenticated user
      operationId: getCurrentUser
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized

  /users/me/jobs:
    get:
      summary: List User's Jobs
      description: Retrieve a list of fine-tuning jobs for the current user
      operationId: listUserJobs
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FineTuningJob'
        '401':
          description: Unauthorized

  /users/me/api-keys:
    post:
      summary: Generate API Key
      description: Generate a new API key for the current user
      operationId: generateApiKey
      security:
        - bearerAuth: []
      responses:
        '201':
          description: API key generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKey'
        '401':
          description: Unauthorized

    get:
      summary: List API Keys
      description: Retrieve a list of API keys for the current user
      operationId: listApiKeys
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiKey'
        '401':
          description: Unauthorized

  /users/me/api-keys/{keyId}:
    delete:
      summary: Revoke API Key
      description: Revoke a specific API key
      operationId: revokeApiKey
      security:
        - bearerAuth: []
      parameters:
        - name: keyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: API key revoked successfully
        '401':
          description: Unauthorized
        '404':
          description: API key not found

components:
  schemas:
    UserSignUp:
      type: object
      required:
        - email
        - password
        - name
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        name:
          type: string

    UserSignIn:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password

    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        name:
          type: string
        created_at:
          type: string
          format: date-time

    AuthResponse:
      type: object
      properties:
        access_token:
          type: string
        token_type:
          type: string
        expires_in:
          type: integer

    FineTuningJob:
      type: object
      properties:
        id:
          type: string
        model:
          type: string
        status:
          type: string
          enum: [pending, running, completed, failed]
        created_at:
          type: string
          format: date-time
        finished_at:
          type: string
          format: date-time

    ApiKey:
      type: object
      properties:
        id:
          type: string
        key:
          type: string
        created_at:
          type: string
          format: date-time
        last_used_at:
          type: string
          format: date-time

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT