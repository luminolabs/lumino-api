openapi: 3.0.0
info:
  title: Usage API
  version: 1.1.0
  description: API for retrieving usage information and costs

paths:
  /v1/usage/total-cost:
    get:
      summary: Get total cost for a given period
      tags:
        - Usage
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: start_date
          schema:
            type: string
            format: date
          required: true
        - in: query
          name: end_date
          schema:
            type: string
            format: date
          required: true
      responses:
        '200':
          description: Total cost retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TotalCost'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /v1/usage/records:
    get:
      summary: Get a list of usage records for a given period
      tags:
        - Usage
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: start_date
          schema:
            type: string
            format: date
          required: true
        - in: query
          name: end_date
          schema:
            type: string
            format: date
          required: true
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/ItemsPerPageParam'
      responses:
        '200':
          description: Usage records retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/UsageRecord'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

components:
  schemas:
    TotalCost:
      type: object
      properties:
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        total_cost:
          type: number
          format: float

    UsageRecord:
      type: object
      properties:
        id:
          type: string
        created_at:
          type: string
          format: date-time
        service_name:
          type: string
        service_id:
          type: string
        usage_amount:
          type: number
          format: float
        cost:
          type: number
          format: float

    Pagination:
      type: object
      properties:
        total_items:
          type: integer
          description: Total number of items
        total_pages:
          type: integer
          description: Total number of pages
        current_page:
          type: integer
          description: Current page number
        items_per_page:
          type: integer
          description: Number of items per page
        next_page:
          type: integer
          nullable: true
          description: Next page number (null if there is no next page)
        previous_page:
          type: integer
          nullable: true
          description: Previous page number (null if there is no previous page)

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: A unique error code that identifies the type of error
        message:
          type: string
          description: A human-readable error message
        details:
          type: object
          description: Additional details about the error, if any

    ErrorResponse:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
        request_id:
          type: string
          description: A unique identifier for the request, useful for debugging and support

  parameters:
    PageParam:
      in: query
      name: page
      schema:
        type: integer
        default: 1
        minimum: 1
      description: Page number to retrieve
    ItemsPerPageParam:
      in: query
      name: items_per_page
      schema:
        type: integer
        default: 20
        minimum: 1
        maximum: 100
      description: Number of items to return per page

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer