openapi: 3.0.0
info:
  title: Models API
  version: 1.1.0
  description: API for retrieving information about available LLM models, including base models and fine-tuned models

paths:
  /v1/models:
    get:
      summary: List all available LLM models
      description: Retrieve a list of all available LLM models, including base models and fine-tuned models
      parameters:
        - in: query
          name: type
          schema:
            type: string
            enum: [base, fine-tuned, all]
          description: Filter models by type (default is all)
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/ItemsPerPageParam'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ModelSummary'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /v1/models/{model_name}:
    get:
      summary: Get detailed information about a specific model
      description: Retrieve detailed information about a specific LLM model (base or fine-tuned)
      parameters:
        - name: model_name
          in: path
          required: true
          schema:
            type: string
          description: The name of the model to retrieve information for
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelDetail'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

components:
  schemas:
    ModelSummary:
      type: object
      properties:
        name:
          type: string
          description: Model name (e.g., llama3-8b, llama3-8b_text2sql-job-1)
        description:
          type: string
          description: Brief description of the model's capabilities or use cases
        created_at:
          type: string
          format: date-time
          description: The date and time when the model was created or made available

    ModelDetail:
      type: object
      properties:
        name:
          type: string
          description: Model name (e.g., llama3-8b, llama3-8b_text2sql-job-1)
        description:
          type: string
          description: Detailed description of the model
        created_at:
          type: string
          format: date-time
          description: The date and time when the model was created or made available
        fine_tuning_job_id:
          type: string
          nullable: true
          description: The ID of the fine-tuning job that created this model (null for base models)
        needs_hf_access:
          type: boolean
          description: Whether Hugging Face access is required to use this model
        metadata:
          type: object
          description: Additional metadata about the model
          properties:
            release_date:
              type: string
              format: date
              description: The date when the model was released or last updated
          additionalProperties: true

    Pagination:
      type: object
      properties:
        total_pages:
          type: integer
          description: Total number of pages
        current_page:
          type: integer
          description: Current page number
        items_per_page:
          type: integer
          description: Number of items per page
        next_page:
          type: integer
          nullable: true
          description: Next page number (null if there is no next page)
        previous_page:
          type: integer
          nullable: true
          description: Previous page number (null if there is no previous page)

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: A unique error code that identifies the type of error
        message:
          type: string
          description: A human-readable error message
        details:
          type: object
          description: Additional details about the error, if any

    ErrorResponse:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
        request_id:
          type: string
          description: A unique identifier for the request, useful for debugging and support

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

  parameters:
    PageParam:
      in: query
      name: page
      schema:
        type: integer
        default: 1
        minimum: 1
      description: Page number to retrieve
    ItemsPerPageParam:
      in: query
      name: items_per_page
      schema:
        type: integer
        default: 20
        minimum: 1
        maximum: 100
      description: Number of items to return per page