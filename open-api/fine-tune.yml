openapi: 3.0.0
info:
  title: Fine-Tuning API
  version: 1.0.0
  description: API for fine-tuning large language models with custom datasets

servers:
  - url: https://api.luminolabs.ai/v1

paths:
  /files:
    post:
      summary: Upload a file
      description: Upload a dataset file for fine-tuning
      operationId: uploadFile
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'

  /files/{fileId}:
    get:
      summary: Retrieve file information
      description: Get information about an uploaded file
      operationId: getFile
      parameters:
        - name: fileId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'

  /fine-tuning:
    post:
      summary: Create a fine-tuning job
      description: Start a new fine-tuning job
      operationId: createFineTuningJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FineTuningJobCreate'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FineTuningJob'

  /fine-tuning/{jobId}:
    get:
      summary: Retrieve fine-tuning job
      description: Get information about a fine-tuning job
      operationId: getFineTuningJob
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FineTuningJob'

  /models:
    get:
      summary: List available models
      description: Get a list of models available for fine-tuning
      operationId: listModels
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Model'

  /models/{modelId}/deploy:
    post:
      summary: Deploy a fine-tuned model
      description: Deploy a fine-tuned model for inference
      operationId: deployModel
      parameters:
        - name: modelId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelDeploy'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployedModel'

components:
  schemas:
    File:
      type: object
      properties:
        id:
          type: string
        filename:
          type: string
        bytes:
          type: integer
        created_at:
          type: integer
        status:
          type: string
          enum: [pending, processed]

    FineTuningJobCreate:
      type: object
      required:
        - training_file
        - model
      properties:
        training_file:
          type: string
        model:
          type: string
        suffix:
          type: string
        n_epochs:
          type: integer
        batch_size:
          type: integer
        learning_rate:
          type: number
        lora:
          type: boolean
        lora_r:
          type: integer
        lora_alpha:
          type: integer
        lora_dropout:
          type: number
        wandb_api_key:
          type: string

    FineTuningJob:
      type: object
      properties:
        id:
          type: string
        training_file:
          type: string
        model:
          type: string
        status:
          type: string
          enum: [pending, queued, running, uploading, completed, failed]
        created_at:
          type: integer
        finished_at:
          type: integer
        fine_tuned_model:
          type: string

    Model:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        context_length:
          type: integer
        max_batch_size:
          type: integer
        min_batch_size:
          type: integer

    ModelDeploy:
      type: object
      required:
        - hardware
      properties:
        hardware:
          type: string
          enum: [RTX6000, L40, L40S, A100, H100]

    DeployedModel:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
          enum: [deploying, ready, failed]
        endpoint:
          type: string