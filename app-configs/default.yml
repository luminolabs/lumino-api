# Application logging
log_level: INFO
log_stdout: true
log_file: ./.logs/output.log

# sqlalchemy logging
sqlalchemy_log_all: False  # Set to True to log all SQL queries in verbose mode

# GCP
gcp_project: neat-airport-407301
gcs_datasets_bucket: pipeline-zen-datasets  # Set this without the `lum-` prefix

# Database
# These two are the same in all environments
# If you change default db settings, you need to change them in docker-compose.yml too
db_name: lumino_api
db_user: lumino_api
# Production environment overrides these, to use a Cloud SQL instance,
# otherwise, we use a local Postgres instance with docker compose
db_pass: pass123
db_host: localhost
db_port: 35100

# API configuration
api_v1_prefix: /v1

# UI
ui_url:  # URL to the UI, ex: https://app.luminolabs.ai
ui_url_settings: /settings  # URL to the UI settings page
use_api_ui: False  # Set to True to use the API UI
base_domain_name: localhost

# Scheduler Zen URL
run_with_scheduler: True  # Set to False in order to run jobs without the Scheduler Zen API (for local testing)
scheduler_zen_url:  # URL to the Scheduler Zen API

# Auth0 configuration
# Set these in your .env file when running on a local env
# On non-local envs, we store these in a GCP secret
auth0_client_id:
auth0_client_secret:
auth0_domain:
app_secret_key:

# Stripe configuration
stripe_secret_key:  # Set this in your .env file: `CAPI_STRIPE_SECRET_KEY=.....`
stripe_webhook_secret:  # Set this in your .env file: `CAPI_STRIPE_WEBHOOK_SECRET=.....`

# Billing
fine_tuning_job_min_credits: 5  # Minimum credits required to run a fine-tuning job
new_user_credits: 5  # Credits given to a new user